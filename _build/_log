### Starting build.
# Target: asset/src/trpg.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/trpg.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/trpg.ml > asset/src/trpg.ml.depends # cached
# Target: asset/src/game.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/game.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/game.ml > asset/src/game.ml.depends # cached
# Target: asset/src/action_enum.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/action_enum.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/action_enum.ml > asset/src/action_enum.ml.depends # cached
# Target: asset/src/entity_enum.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/entity_enum.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/entity_enum.ml > asset/src/entity_enum.ml.depends # cached
# Target: asset/src/utils.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/utils.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/utils.ml > asset/src/utils.ml.depends # cached
# Target: asset/src/utils.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/utils.cmo, file:asset/src/utils.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/utils.cmo asset/src/utils.ml # cached
# Target: asset/src/entity_enum.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/entity_enum.cmo, file:asset/src/entity_enum.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/entity_enum.cmo asset/src/entity_enum.ml # cached
# Target: asset/src/hex.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/hex.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/hex.ml > asset/src/hex.ml.depends # cached
# Target: asset/src/hex.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/hex.cmo, file:asset/src/hex.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/hex.cmo asset/src/hex.ml # cached
# Target: asset/src/item.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/item.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/item.ml > asset/src/item.ml.depends # cached
# Target: asset/src/game_object.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/game_object.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/game_object.ml > asset/src/game_object.ml.depends # cached
# Target: asset/src/game_object.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/game_object.cmo, file:asset/src/game_object.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/game_object.cmo asset/src/game_object.ml # cached
# Target: asset/src/layer_enum.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/layer_enum.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/layer_enum.ml > asset/src/layer_enum.ml.depends # cached
# Target: asset/src/layer_enum.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/layer_enum.cmo, file:asset/src/layer_enum.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/layer_enum.cmo asset/src/layer_enum.ml # cached
# Target: asset/src/texture_pack.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/texture_pack.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/texture_pack.ml > asset/src/texture_pack.ml.depends # cached
# Target: asset/src/colors.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/colors.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/colors.ml > asset/src/colors.ml.depends # cached
# Target: asset/src/colors.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/colors.cmo, file:asset/src/colors.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/colors.cmo asset/src/colors.ml # cached
# Target: asset/src/texture_wrapper.mli.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:mli, file:asset/src/texture_wrapper.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/texture_wrapper.mli > asset/src/texture_wrapper.mli.depends # cached
# Target: asset/src/texture_wrapper.cmi, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:mli, file:asset/src/texture_wrapper.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/texture_wrapper.cmi asset/src/texture_wrapper.mli # cached
# Target: asset/src/texture_pack.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/texture_pack.cmo, file:asset/src/texture_pack.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/texture_pack.cmo asset/src/texture_pack.ml # cached
# Target: asset/src/item.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/item.cmo, file:asset/src/item.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/item.cmo asset/src/item.ml # cached
# Target: asset/src/action_enum.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/action_enum.cmo, file:asset/src/action_enum.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/action_enum.cmo asset/src/action_enum.ml # cached
# Target: asset/src/animation.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/animation.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/animation.ml > asset/src/animation.ml.depends # cached
# Target: asset/src/entity.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/entity.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/entity.ml > asset/src/entity.ml.depends # cached
# Target: asset/src/behaviour_enum.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/behaviour_enum.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/behaviour_enum.ml > asset/src/behaviour_enum.ml.depends # cached
# Target: asset/src/behaviour_enum.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/behaviour_enum.cmo, file:asset/src/behaviour_enum.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/behaviour_enum.cmo asset/src/behaviour_enum.ml # cached
# Target: asset/src/faction_enum.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/faction_enum.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/faction_enum.ml > asset/src/faction_enum.ml.depends # cached
# Target: asset/src/faction_enum.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/faction_enum.cmo, file:asset/src/faction_enum.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/faction_enum.cmo asset/src/faction_enum.ml # cached
# Target: asset/src/inventory.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/inventory.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/inventory.ml > asset/src/inventory.ml.depends # cached
# Target: asset/src/inventory.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/inventory.cmo, file:asset/src/inventory.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/inventory.cmo asset/src/inventory.ml # cached
# Target: asset/src/entity.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/entity.cmo, file:asset/src/entity.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/entity.cmo asset/src/entity.ml # cached
# Target: asset/src/fx.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/fx.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/fx.ml > asset/src/fx.ml.depends # cached
# Target: asset/src/camera.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/camera.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/camera.ml > asset/src/camera.ml.depends # cached
# Target: asset/src/keyboard_wrapper.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/keyboard_wrapper.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/keyboard_wrapper.ml > asset/src/keyboard_wrapper.ml.depends # cached
# Target: asset/src/keyboard_wrapper.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/keyboard_wrapper.cmo, file:asset/src/keyboard_wrapper.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/keyboard_wrapper.cmo asset/src/keyboard_wrapper.ml # cached
# Target: asset/src/camera.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/camera.cmo, file:asset/src/camera.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/camera.cmo asset/src/camera.ml # cached
# Target: asset/src/fx.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/fx.cmo, file:asset/src/fx.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/fx.cmo asset/src/fx.ml # cached
# Target: asset/src/grid.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/grid.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/grid.ml > asset/src/grid.ml.depends # cached
# Target: asset/src/military.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/military.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/military.ml > asset/src/military.ml.depends # cached
# Target: asset/src/military.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/military.cmo, file:asset/src/military.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/military.cmo asset/src/military.ml # cached
# Target: asset/src/tile.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/tile.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/tile.ml > asset/src/tile.ml.depends # cached
# Target: asset/src/tile.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/tile.cmo, file:asset/src/tile.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/tile.cmo asset/src/tile.ml # cached
# Target: asset/src/grid.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/grid.cmo, file:asset/src/grid.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/grid.cmo asset/src/grid.ml # cached
# Target: asset/src/animation.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/animation.cmo, file:asset/src/animation.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/animation.cmo asset/src/animation.ml # cached
# Target: asset/src/background.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/background.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/background.ml > asset/src/background.ml.depends # cached
# Target: asset/src/background.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/background.cmo, file:asset/src/background.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/background.cmo asset/src/background.ml # cached
# Target: asset/src/context.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/context.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/context.ml > asset/src/context.ml.depends # cached
# Target: asset/src/action.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/action.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/action.ml > asset/src/action.ml.depends # cached
# Target: asset/src/pathfinder.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/pathfinder.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/pathfinder.ml > asset/src/pathfinder.ml.depends
# Target: asset/src/priority_queue.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/priority_queue.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/priority_queue.ml > asset/src/priority_queue.ml.depends # cached
# Target: asset/src/priority_queue.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/priority_queue.cmo, file:asset/src/priority_queue.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/priority_queue.cmo asset/src/priority_queue.ml # cached
# Target: asset/src/pathfinder.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/pathfinder.cmo, file:asset/src/pathfinder.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/pathfinder.cmo asset/src/pathfinder.ml
+ ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/pathfinder.cmo asset/src/pathfinder.ml
File "asset/src/pathfinder.ml", line 179, characters 14-18:
Warning 26: unused variable truc.
# Target: asset/src/behaviour.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/behaviour.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/behaviour.ml > asset/src/behaviour.ml.depends
# Target: asset/src/action.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/action.cmo, file:asset/src/action.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/action.cmo asset/src/action.ml
# Target: asset/src/cursor.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/cursor.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/cursor.ml > asset/src/cursor.ml.depends # cached
# Target: asset/src/cursor.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/cursor.cmo, file:asset/src/cursor.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/cursor.cmo asset/src/cursor.ml # cached
# Target: asset/src/faction.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/faction.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/faction.ml > asset/src/faction.ml.depends # cached
# Target: asset/src/faction.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/faction.cmo, file:asset/src/faction.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/faction.cmo asset/src/faction.ml # cached
# Target: asset/src/infrastructure.ml.depends, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), debug, extension:ml, file:asset/src/infrastructure.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -modules asset/src/infrastructure.ml > asset/src/infrastructure.ml.depends # cached
# Target: asset/src/infrastructure.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/infrastructure.cmo, file:asset/src/infrastructure.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/infrastructure.cmo asset/src/infrastructure.ml # cached
# Target: asset/src/behaviour.cmo, tags: { package(tsdl,tsdl_mixer,tsdl_image,tsdl_ttf), byte, compile, debug, extension:cmo, extension:ml, file:asset/src/behaviour.cmo, file:asset/src/behaviour.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/behaviour.cmo asset/src/behaviour.ml
+ ocamlfind ocamlc -c -g -package tsdl,tsdl_mixer,tsdl_image,tsdl_ttf -I asset/src -o asset/src/behaviour.cmo asset/src/behaviour.ml
File "asset/src/behaviour.ml", line 73, characters 34-58:
Error: Unbound value MPathfinder.closest_tile
Command exited with code 2.
# Compilation unsuccessful.
